{"version":3,"file":"static/js/822.6a4f583a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/chat/messages/Messages.module.css?6f0c","components/chat/messages/Messages.tsx","components/chat/ChatPage.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messagesWrapper\":\"Messages_messagesWrapper__GmzfQ\",\"avatar\":\"Messages_avatar__CDvwB\",\"messageContainer\":\"Messages_messageContainer__Lz+14\",\"deleted\":\"Messages_deleted__R0Sbd\",\"messageBlock\":\"Messages_messageBlock__pGIH5\",\"author\":\"Messages_author__vTxJx\",\"message\":\"Messages_message__BBOz6\",\"iconWrapper\":\"Messages_iconWrapper__UJ90K\",\"icon\":\"Messages_icon__oOTpf\",\"recovery\":\"Messages_recovery__i8PDO\"};","import { FC, memo, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Tooltip } from '@mui/material';\nimport classNames from 'classnames';\nimport avatar from 'src/images/avatar.png';\nimport { chatActions } from 'src/redux/chatReducer';\nimport { RootState } from 'src/redux/redux-store';\nimport { ChatMessage } from 'src/types';\n\nimport classes from './Messages.module.css';\n\nconst Message: FC<ChatMessage> = memo(\n  ({ message, userName, photo, userId, id, deleted, deletedMessage }) => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const handleDeleteMessage = () => {\n      dispatch(chatActions.deleteMessageActionCreator(id as string));\n    };\n\n    const handleRestoreMessage = () => {\n      dispatch(chatActions.restoreMessageActionCreator(id as string));\n    };\n\n    const [deletion, recovery] =\n      deleted && deletedMessage ? deletedMessage.split('.') : [];\n\n    return (\n      <div\n        className={classNames(classes.messageContainer, {\n          [classes.deleted]: deleted,\n        })}\n      >\n        <div className={classes.messageBlock}>\n          {!deleted && (\n            <NavLink to={'/profile/' + userId}>\n              <img\n                src={photo ?? avatar}\n                alt={userName}\n                className={classes.avatar}\n              />\n            </NavLink>\n          )}\n          <div>\n            {!deleted && (\n              <NavLink to={'/profile/' + userId}>\n                <div className={classes.author}>{userName}</div>\n              </NavLink>\n            )}\n            {!deleted && <div className={classes.message}>{message}</div>}\n            {deleted && (\n              <div className={classes.message}>\n                <span>{deletion}</span>.{' '}\n                <span\n                  className={classes.recovery}\n                  onClick={handleRestoreMessage}\n                  role=\"button\"\n                >\n                  {recovery}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        {!deleted && (\n          <div className={classes.iconWrapper}>\n            <Tooltip\n              title={t('chat.delete') as string}\n              arrow\n              placement=\"bottom-start\"\n            >\n              <DeleteOutlineIcon\n                onClick={handleDeleteMessage}\n                className={classes.icon}\n              />\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport const Messages: FC = memo(() => {\n  const messages = useSelector((state: RootState) => state.chat.messages);\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return (\n    <div className={classes.messagesWrapper}>\n      {messages.map(\n        ({ id, userId, message, photo, userName, deleted, deletedMessage }) => (\n          <Message\n            key={id}\n            userId={userId}\n            message={message}\n            photo={photo}\n            userName={userName}\n            id={id}\n            deleted={deleted}\n            deletedMessage={deletedMessage}\n          />\n        )\n      )}\n      <div ref={scrollRef}></div>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Messages } from 'src/components/chat/messages/Messages';\nimport Loader from 'src/components/common/atoms/loader/Loader';\nimport { SendMessageForm } from 'src/components/common/molecules/sendMessageForm/SendMessageForm';\nimport { sendMessageThunkCreator } from 'src/redux/chatReducer';\nimport { RootState } from 'src/redux/redux-store';\n\nexport const ChatPage: FC = memo(() => {\n  const { isAuth } = useSelector((state: RootState) => state.auth);\n  const status = useSelector((state: RootState) => state.chat.status);\n\n  if (!isAuth) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  return (\n    <>\n      {status === 'pending' && <Loader isFetching={status === 'pending'} />}\n      {status === 'ready' && (\n        <>\n          <Messages />\n          <SendMessageForm\n            status={status}\n            sendMessageChat={sendMessageThunkCreator}\n          />\n        </>\n      )}\n    </>\n  );\n});\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Message","memo","message","userName","photo","userId","id","deleted","deletedMessage","dispatch","useDispatch","t","useTranslation","split","deletion","recovery","className","classNames","classes","to","src","avatar","alt","onClick","chatActions","role","Tooltip","title","arrow","placement","DeleteOutline","Messages","messages","useSelector","state","chat","scrollRef","useRef","useEffect","current","scrollIntoView","map","ref","ChatPage","isAuth","auth","status","Loader","isFetching","SendMessageForm","sendMessageChat","sendMessageThunkCreator","hasOwn","hasOwnProperty","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default"],"sourceRoot":""}