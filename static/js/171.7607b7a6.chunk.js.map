{"version":3,"file":"static/js/171.7607b7a6.chunk.js","mappings":"4OACA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA8F,yBAA9F,EAA+H,qBAA/H,EAA4J,qBAA5J,EAA2L,uBAA3L,EAA0N,qB,SCWpNA,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJG,IAAI,GAAI,aACRC,SAAS,YACTF,MAAM,wBACTG,SAAUL,EAAAA,KAAaG,IAAI,GAAI,aAAaC,SAAS,cAwGvD,EAzFmC,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACpC,GAA2BC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,IAA5B,IAA/BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACPC,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACE,+BACE,SAAC,KAAD,CACEN,SAAUA,EACVQ,cAAe,CACbZ,MAAO,GACPG,SAAU,GACVU,YAAY,EACZJ,QAAS,IAEXK,iBAAkBjB,EARpB,SAUG,gBAAGkB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACC,UAAC,KAAD,YACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,YAAY,QACZC,UAAWC,EAAAA,EACXC,UAAU,OAGd,gBAAKT,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,WAAS,EACTI,YAAY,WACZF,KAAK,WACLD,GAAG,WACHO,KAAK,WACLL,MAAM,WACNE,UAAWC,EAAAA,EACXC,UAAU,MAGbjB,IACC,iCACE,gBAAKmB,IAAKnB,EAASoB,IAAI,UAAUC,MAAM,QAAQC,OAAO,UACtD,SAAC,KAAD,CACEZ,WAAS,EACTI,YAAY,UACZF,KAAK,UACLD,GAAG,UACHO,KAAK,OACLL,MAAM,UACNE,UAAWC,EAAAA,EACXC,UAAU,OAKfX,IAAU,gBAAKE,UAAWC,EAAhB,SAA+BV,KAC1C,gBAAKS,UAAWC,EAAhB,UACE,SAAC,KAAD,CACES,KAAK,WACLH,UAAWQ,EAAAA,EACXX,KAAK,aACLY,MAAO,CAAEX,MAAO,oBAGpB,iBAAKL,UAAWC,EAAhB,WACE,SAACgB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNT,KAAK,SACLD,WAAYX,EAAOf,SAAWe,EAAOZ,WAAaa,EAJpD,SAMGN,EAAE,kBAEL,SAACwB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,KAAK,6CAHP,SAKG3B,EAAE,6BAhEV,KAwER,E,UCvED,EAhCkB,WAChB,IAAM4B,GAAWC,EAAAA,EAAAA,MACjB,GAA2BlC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,IAA5B,IAA/BiC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OACVC,EAAW,mBAAeD,GAahC,OAAID,GACK,SAAC,KAAD,CAAUG,GAAID,KAIrB,gBAAKzB,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,yFACA,SAAC,EAAD,CAAWd,SApBG,SAACwC,GACrBN,GACEO,EAAAA,EAAAA,IACED,EAAO5C,MACP4C,EAAOzC,SACPyC,EAAO/B,WACP+B,EAAOnC,SAGZ,UAgBF,C","sources":["webpack://my-app/./src/components/login/Login.module.css?3966","components/login/LoginForm.tsx","components/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__aFJTh\",\"login\":\"Login_login__hfHuW\",\"loginForm\":\"Login_loginForm__cMtN3\",\"title\":\"Login_title__38s5G\",\"field\":\"Login_field__SpLKj\",\"buttons\":\"Login_buttons__0Xfrp\",\"error\":\"Login_error__FQZiN\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-mui';\nimport { LoginType } from 'src/components/login/Login';\nimport { RootState } from 'src/redux/redux-store';\nimport * as Yup from 'yup';\n\nimport styles from './Login.module.css';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .max(25, 'Too Long!')\n    .required('Required')\n    .email('Invalid email format'),\n  password: Yup.string().max(15, 'Too Long!').required('Required'),\n});\n\ntype Props = {\n  onSubmit: (\n    values: LoginType,\n    formikHelpers: FormikHelpers<{\n      email: string;\n      password: string;\n      rememberMe: boolean;\n      captcha: string;\n    }>\n  ) => void;\n};\n\nconst LoginForm: React.FC<Props> = ({ onSubmit }) => {\n  const { error, captcha } = useSelector((state: RootState) => state.auth);\n  const { t } = useTranslation();\n  return (\n    <>\n      <Formik\n        onSubmit={onSubmit}\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n          captcha: '',\n        }}\n        validationSchema={LoginSchema}\n      >\n        {({ errors, dirty }) => (\n          <Form>\n            <div className={styles.field}>\n              <Field\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                component={TextField}\n                disabled={false}\n              />\n            </div>\n            <div className={styles.field}>\n              <Field\n                fullWidth\n                placeholder=\"Password\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                component={TextField}\n                disabled={false}\n              />\n            </div>\n            {captcha && (\n              <>\n                <img src={captcha} alt=\"captcha\" width=\"180px\" height=\"90px\" />\n                <Field\n                  fullWidth\n                  placeholder=\"captcha\"\n                  name=\"captcha\"\n                  id=\"captcha\"\n                  type=\"text\"\n                  label=\"captcha\"\n                  component={TextField}\n                  disabled={false}\n                />\n              </>\n            )}\n\n            {errors && <div className={styles.error}>{error}</div>}\n            <div className={styles.field}>\n              <Field\n                type=\"checkbox\"\n                component={CheckboxWithLabel}\n                name=\"rememberMe\"\n                Label={{ label: 'remember me' }}\n              />\n            </div>\n            <div className={styles.buttons}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!!errors.email || !!errors.password || !dirty}\n              >\n                {t('login.enter')}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                href=\"https://social-network.samuraijs.com/login\"\n              >\n                {t('login.registration')}\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginForm from 'src/components/login/LoginForm';\r\nimport { loginDataThunkCreator } from 'src/redux/authReducer';\r\nimport { RootState } from 'src/redux/redux-store';\r\n\r\nimport styles from './Login.module.css';\r\n\r\nexport type LoginType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n  captcha: string | null;\r\n};\r\n\r\nconst Login: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuth, userId } = useSelector((state: RootState) => state.auth);\r\n  const profilePath = `/Profile/${userId}`;\r\n\r\n  const LogInFunction = (values: LoginType) => {\r\n    dispatch(\r\n      loginDataThunkCreator(\r\n        values.email,\r\n        values.password,\r\n        values.rememberMe,\r\n        values.captcha\r\n      )\r\n    );\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={profilePath} />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.login}>\r\n        <div className={styles.loginForm}>\r\n          <h1 className={styles.title}>Вход в аккаунт</h1>\r\n          <LoginForm onSubmit={LogInFunction} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LoginSchema","Yup","shape","email","max","required","password","onSubmit","useSelector","state","auth","error","captcha","t","useTranslation","initialValues","rememberMe","validationSchema","errors","dirty","className","styles","fullWidth","id","name","label","placeholder","component","TextField","disabled","type","src","alt","width","height","CheckboxWithLabel","Label","Button","variant","color","href","dispatch","useDispatch","isAuth","userId","profilePath","to","values","loginDataThunkCreator"],"sourceRoot":""}