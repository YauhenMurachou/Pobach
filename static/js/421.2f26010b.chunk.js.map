{"version":3,"file":"static/js/421.2f26010b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common/organisms/settingsForm/SettingsForm.module.css?64e6","components/common/organisms/settingsForm/SettingsForm.tsx","webpack://my-app/./src/components/settings/Settings.module.css?5f75","components/settings/Settings.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","utils/validationForms.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"SettingsForm_formWrapper__AOnop\",\"title\":\"SettingsForm_title__jqqKK\",\"property\":\"SettingsForm_property__yMOJB\",\"contactsWrapper\":\"SettingsForm_contactsWrapper__Ttzxo\",\"contacts\":\"SettingsForm_contacts__N+BRO\",\"contact\":\"SettingsForm_contact__FUMwA\",\"buttons\":\"SettingsForm_buttons__ggSrg\"};","import { Button } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-mui';\nimport { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { EditProfileType } from 'src/types';\nimport {\n  isProfileFormChanged,\n  profielValidationSchema,\n} from 'src/utils/validationForms';\n\nimport classes from './SettingsForm.module.css';\n\ntype Props = {\n  info: string[];\n  onSubmit: (values: EditProfileType) => void | Promise<unknown>;\n  editProfile: EditProfileType;\n  toggleEditMode?: () => void;\n};\n\nconst SettingsForm: FC<Props> = ({\n  info,\n  onSubmit,\n  editProfile,\n  toggleEditMode,\n}) => {\n  const { t } = useTranslation();\n  const exceptions = ['photos', 'userId', 'fullName'];\n  return (\n    <>\n      <Formik\n        onSubmit={onSubmit}\n        initialValues={editProfile}\n        validationSchema={profielValidationSchema}\n      >\n        {({ dirty, isValid, values }) => {\n          const isFormChanged = isProfileFormChanged<EditProfileType>(\n            values,\n            editProfile\n          );\n\n          return (\n            <Form className={classes.formWrapper}>\n              <h3 className={classes.title}>{t('settings.title')}</h3>\n              <div className={classes.property}>\n                <Field\n                  name=\"fullName\"\n                  id=\"fullName\"\n                  component={TextField}\n                  variant=\"standard\"\n                  helperText={t('settings.fullName')}\n                />\n              </div>\n              {info.map((item) => {\n                if (exceptions.includes(item)) {\n                  return undefined;\n                } else if (\n                  typeof editProfile[item as keyof EditProfileType] ===\n                  'boolean'\n                ) {\n                  return (\n                    <div className={classes.property} key={uuidv4()}>\n                      <Field\n                        Label={{ label: t('settings.job') }}\n                        name={item}\n                        id={item}\n                        type=\"checkbox\"\n                        component={CheckboxWithLabel}\n                        style={{ display: 'flex' }}\n                      />\n                    </div>\n                  );\n                } else if (\n                  typeof editProfile[item as keyof EditProfileType] !== 'object'\n                ) {\n                  return (\n                    <div className={classes.property}>\n                      <Field\n                        name={item}\n                        key={uuidv4()}\n                        id={item}\n                        component={TextField}\n                        variant=\"standard\"\n                        helperText={item}\n                      />\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div key={uuidv4()} className={classes.contactsWrapper}>\n                      <h4 className={classes.title}>{item}</h4>\n                      <div className={classes.contacts}>\n                        {Object.keys(editProfile['contacts']).map((elem) => (\n                          <Field\n                            name={`contacts.${elem}`}\n                            id={`contacts.${elem}`}\n                            component={TextField}\n                            variant=\"standard\"\n                            helperText={elem}\n                            validateonchange={false}\n                            validateOnBlur={true}\n                            className={classes.contact}\n                            key={uuidv4()}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n              <div className={classes.buttons}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={!dirty || !isValid || !isFormChanged}\n                >\n                  {t('profile.save')}\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={toggleEditMode}\n                >\n                  {t('profile.back')}\n                </Button>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default SettingsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Settings_title__20sHA\"};","import { Button } from '@mui/material';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport SettingsForm from 'src/components/common/organisms/settingsForm/SettingsForm';\r\nimport { authActions } from 'src/redux/authReducer';\r\nimport {\r\n  editProfileThunkCreator,\r\n  setUserProfileThunkCreator,\r\n} from 'src/redux/profilePageReducer';\r\nimport { RootState } from 'src/redux/redux-store';\r\nimport { EditProfileType, ProfileType } from 'src/types';\r\n\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings: FC = () => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const { userId, email, login, isAuth } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const profile = useSelector((state: RootState) => state.profilePage.profile);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    dispatch(setUserProfileThunkCreator(userId));\r\n  }, []);\r\n\r\n  const handleProfileInfoEdit = (formData: EditProfileType) => {\r\n    dispatch(editProfileThunkCreator(formData));\r\n    if (formData.fullName !== login) {\r\n      dispatch(\r\n        authActions.setUserDataActionCreator(\r\n          userId,\r\n          email,\r\n          formData.fullName,\r\n          true\r\n        )\r\n      );\r\n    }\r\n    setEditMode(false);\r\n  };\r\n\r\n  const info = profile ? Object.getOwnPropertyNames(profile) : {};\r\n  const { photos, ...editProfile } = profile ?? {};\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div className={classes.title}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setEditMode((prevState) => !prevState)}\r\n          >\r\n            {t('settings.edit')}\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <SettingsForm\r\n          info={info as []}\r\n          editProfile={editProfile as ProfileType}\r\n          onSubmit={handleProfileInfoEdit}\r\n          toggleEditMode={() => setEditMode((prevState) => !prevState)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import i18n from 'src/i18n';\r\nimport * as Yup from 'yup';\r\n\r\nconst isDomain = /(^(\\w[a-z\\d-]*\\.)+[a-z]{2,}$)/i;\r\nconst { t } = i18n;\r\n\r\nconst validateContact = Yup.string()\r\n  .trim()\r\n  .nullable()\r\n  .matches(isDomain, t('validation.domain') as string);\r\nconst longStringValidate = Yup.string()\r\n  .trim()\r\n  .max(25, t('validation.long') as string)\r\n  .required(t('validation.required') as string);\r\n\r\nexport const newPostSchema = Yup.object().shape({\r\n  newPost: Yup.string()\r\n    .min(3, 'Too Short!')\r\n    .max(30, 'Too Long Post, maximum length 30 symbols!'),\r\n});\r\n\r\nexport const profielValidationSchema = Yup.object().shape({\r\n  fullName: Yup.string()\r\n    .trim()\r\n    .max(15, t('validation.long') as string)\r\n    .required(t('validation.required') as string),\r\n  aboutMe: longStringValidate,\r\n  lookingForAJob: Yup.boolean(),\r\n  lookingForAJobDescription: longStringValidate,\r\n  contacts: Yup.object().shape({\r\n    facebook: validateContact,\r\n    github: validateContact,\r\n    vk: validateContact,\r\n    instagram: validateContact,\r\n    twitter: validateContact,\r\n    website: validateContact,\r\n    youtube: validateContact,\r\n    mainLink: validateContact,\r\n  }),\r\n});\r\n\r\nexport const loginValidationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .max(25, t('validation.long') as string)\r\n    .required(t('validation.required') as string)\r\n    .email(t('validation.email') as string),\r\n  password: Yup.string()\r\n    .max(15, t('validation.long') as string)\r\n    .required(t('validation.required') as string),\r\n});\r\n\r\nexport const isProfileFormChanged = <T extends { [key: string]: any }>(\r\n  values: T,\r\n  initialValues: T\r\n): boolean =>\r\n  Object.entries(values).some(([key, field]) => {\r\n    const initial = initialValues[key];\r\n\r\n    if (typeof field === 'string') {\r\n      return (\r\n        field.trim() !== (typeof initial === 'string' ? initial.trim() : '')\r\n      );\r\n    }\r\n\r\n    if (typeof field === 'boolean') {\r\n      return field !== (typeof initial === 'boolean' ? initial : false);\r\n    }\r\n\r\n    if (typeof field === 'object') {\r\n      return field && isProfileFormChanged(field, initial || {});\r\n    }\r\n\r\n    return false;\r\n  });\r\n"],"names":["info","onSubmit","editProfile","toggleEditMode","t","useTranslation","exceptions","initialValues","validationSchema","profielValidationSchema","dirty","isValid","values","isFormChanged","isProfileFormChanged","className","classes","name","id","component","TextField","variant","helperText","map","item","includes","Label","label","type","CheckboxWithLabel","style","display","uuidv4","Object","keys","elem","validateonchange","validateOnBlur","Button","color","disabled","onClick","useState","editMode","setEditMode","useSelector","state","auth","userId","email","login","isAuth","profile","profilePage","dispatch","useDispatch","useEffect","setUserProfileThunkCreator","getOwnPropertyNames","photos","source","excluded","key","i","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","formData","editProfileThunkCreator","fullName","authActions","prevState","to","i18n","validateContact","Yup","trim","nullable","matches","longStringValidate","max","required","newPostSchema","shape","newPost","min","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","loginValidationSchema","password","entries","some","field","initial"],"sourceRoot":""}