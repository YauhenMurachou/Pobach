{"version":3,"file":"static/js/399.2286ae7b.chunk.js","mappings":"6LACA,EAA2B,yBAA3B,EAA8D,wBAA9D,EAAkG,0B,SCqElG,EA5DmB,WACjB,IAAQA,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,IAA5B,IAAvBH,OACFI,GAAgBH,EAAAA,EAAAA,KACpB,SAACC,GAAD,OAAsBA,EAAMG,OAAOC,QAAQF,aAA3C,IAEIG,GAAaN,EAAAA,EAAAA,KACjB,SAACC,GAAD,OAAsBA,EAAMG,OAAOG,KAAKD,UAAxC,IAGIE,GAAWC,EAAAA,EAAAA,MAUjB,OAAKV,GAIH,4BACE,oCACA,iBAAKW,UAAWC,EAAhB,WACE,SAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAfH,WACvBN,GAASO,EAAAA,EAAAA,MACV,EAasDC,QAAQ,YAAzD,kCAGA,SAACJ,EAAA,EAAD,CACEC,KAAK,SACLC,QAhBc,WACpBN,GAASS,EAAAA,EAAAA,MACV,EAeOD,QAAQ,YACRE,MAAM,YAJR,4CASF,iBAAKR,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGR,EAAcgB,KAAI,SAACC,GAAD,OACjB,gBAAoBC,IAAKD,EAAME,aAAcC,IAAKH,EAAMI,OAA9CJ,EAAMK,GADC,OAIrB,gBAAKf,UAAWC,EAAhB,SACGL,EAAWa,KAAI,SAACC,GAAD,OACd,gBAEEC,IAAKD,EAAMM,aACXH,IAAKH,EAAMO,OACXC,MAAM,MACNC,OAAO,OAJFT,EAAMK,GAFC,aAzBf,SAAC,KAAD,CAAUK,GAAG,UAsCvB,C","sources":["webpack://my-app/./src/components/photos/Photos.module.css?fc2b","components/photos/Photos.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"Photos_subtitle__dORG4\",\"wrapper\":\"Photos_wrapper__dXiTl\",\"container\":\"Photos_container__b7UmW\"};","import { Button } from '@mui/material';\nimport { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { fetchPhotos, photosRequestedAction } from 'src/redux/photosReducer';\nimport { RootState } from 'src/redux/redux-store';\n\nimport styles from './Photos.module.css';\n\nconst Photos: FC = () => {\n  const { isAuth } = useSelector((state: RootState) => state.auth);\n  const toolkitPhotos = useSelector(\n    (state: RootState) => state.photos.toolkit.toolkitPhotos\n  );\n  const sagaPhotos = useSelector(\n    (state: RootState) => state.photos.saga.sagaPhotos\n  );\n\n  const dispatch = useDispatch();\n\n  const getToolkitPhotos = () => {\n    dispatch(fetchPhotos());\n  };\n\n  const getSagaPhotos = () => {\n    dispatch(photosRequestedAction());\n  };\n\n  if (!isAuth) {\n    return <Redirect to=\"/Login\" />;\n  }\n  return (\n    <div>\n      <h3>Photos</h3>\n      <div className={styles.subtitle}>\n        <Button type=\"button\" onClick={getToolkitPhotos} variant=\"contained\">\n          Get photos with RTK\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={getSagaPhotos}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Get photos with Redux-saga\n        </Button>\n      </div>\n      <div className={styles.wrapper}>\n        <div className={styles.container}>\n          {toolkitPhotos.map((photo) => (\n            <img key={photo.id} src={photo.thumbnailUrl} alt={photo.title} />\n          ))}\n        </div>\n        <div className={styles.container}>\n          {sagaPhotos.map((photo) => (\n            <img\n              key={photo.id}\n              src={photo.download_url}\n              alt={photo.author}\n              width=\"200\"\n              height=\"200\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Photos;\n"],"names":["isAuth","useSelector","state","auth","toolkitPhotos","photos","toolkit","sagaPhotos","saga","dispatch","useDispatch","className","styles","Button","type","onClick","fetchPhotos","variant","photosRequestedAction","color","map","photo","src","thumbnailUrl","alt","title","id","download_url","author","width","height","to"],"sourceRoot":""}