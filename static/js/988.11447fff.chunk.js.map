{"version":3,"file":"static/js/988.11447fff.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/DeleteOutline.js","../node_modules/@mui/icons-material/Send.js","../node_modules/@mui/icons-material/TagFaces.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/emoji-picker-react/src/DomUtils/classNames.ts","../node_modules/emoji-picker-react/src/DomUtils/focusElement.ts","../node_modules/emoji-picker-react/src/components/context/ElementRefContext.tsx","../node_modules/emoji-picker-react/src/types/exposedTypes.ts","../node_modules/emoji-picker-react/src/dataUtils/emojiSelectors.ts","../node_modules/emoji-picker-react/src/data/skinToneVariations.ts","../node_modules/emoji-picker-react/src/config/cdnUrls.ts","../node_modules/emoji-picker-react/src/config/categoryConfig.ts","../node_modules/emoji-picker-react/src/config/config.ts","../node_modules/emoji-picker-react/src/components/context/PickerConfigContext.tsx","../node_modules/emoji-picker-react/src/config/useConfig.ts","../node_modules/emoji-picker-react/src/DomUtils/isDarkTheme.ts","../node_modules/emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts","../node_modules/emoji-picker-react/src/hooks/useDebouncedState.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowedEmojis.ts","../node_modules/emoji-picker-react/src/components/context/PickerContext.tsx","../node_modules/emoji-picker-react/src/hooks/useInitialLoad.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowMouseMove.ts","../node_modules/emoji-picker-react/src/DomUtils/elementPositionInRow.ts","../node_modules/emoji-picker-react/src/DomUtils/selectors.ts","../node_modules/emoji-picker-react/src/dataUtils/parseNativeEmoji.ts","../node_modules/emoji-picker-react/src/dataUtils/suggested.ts","../node_modules/emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts","../node_modules/emoji-picker-react/src/hooks/useSetVariationPicker.ts","../node_modules/emoji-picker-react/src/hooks/useMouseDownHandlers.ts","../node_modules/emoji-picker-react/src/DomUtils/scrollTo.ts","../node_modules/emoji-picker-react/src/hooks/useFocus.ts","../node_modules/emoji-picker-react/src/hooks/useFilter.ts","../node_modules/emoji-picker-react/src/hooks/useIsEmojiHidden.ts","../node_modules/emoji-picker-react/src/components/atoms/Button.tsx","../node_modules/emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js","../node_modules/emoji-picker-react/src/components/emoji/Emoji.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiCategory.tsx","../node_modules/emoji-picker-react/src/components/body/Suggested.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiList.tsx","../node_modules/emoji-picker-react/src/DomUtils/keyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/body/EmojiVariationPicker.tsx","../node_modules/emoji-picker-react/src/components/body/Body.tsx","../node_modules/emoji-picker-react/src/hooks/useOnScroll.ts","../node_modules/emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts","../node_modules/emoji-picker-react/src/components/Layout/Flex.tsx","../node_modules/emoji-picker-react/src/components/Layout/Space.tsx","../node_modules/emoji-picker-react/src/components/Layout/Absolute.tsx","../node_modules/emoji-picker-react/src/components/Layout/Relative.tsx","../node_modules/emoji-picker-react/src/components/header/SkinTonePicker.tsx","../node_modules/emoji-picker-react/src/components/footer/Preview.tsx","../node_modules/emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts","../node_modules/emoji-picker-react/src/DomUtils/categoryNameFromDom.ts","../node_modules/emoji-picker-react/src/hooks/useIsSearchMode.ts","../node_modules/emoji-picker-react/src/components/navigation/CategoryNavigation.tsx","../node_modules/emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts","../node_modules/emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts","../node_modules/emoji-picker-react/src/components/header/Search.tsx","../node_modules/emoji-picker-react/src/hooks/useKeyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/header/Header.tsx","../node_modules/emoji-picker-react/src/DomUtils/getActiveElement.ts","../node_modules/emoji-picker-react/src/hooks/preloadEmoji.ts","../node_modules/emoji-picker-react/src/components/main/PickerMain.tsx","../node_modules/emoji-picker-react/src/hooks/useOnFocus.ts","../node_modules/emoji-picker-react/src/EmojiPickerReact.tsx","../node_modules/emoji-picker-react/src/components/ErrorBoundary.tsx","../node_modules/emoji-picker-react/src/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"\n}), 'TagFaces');\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event)) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","value","as","clsx","_jsxs","Typography","ClassNames","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","PickerMainRef","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","Object","entries","reduce","acc","key","skinTonesMapped","mapped","skinTone","assign","emojiNames","emoji","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","category","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","values","flat","setTimeout","Emoji","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","mergeConfig","userConfig","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","lazyLoadEmojis","onEmojiClick","event","basePreviewConfig","searchPlaceHolder","SEARCH","skinTonesDisabled","FREQUENT","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useThemeConfig","AUTO","window","matchMedia","matches","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","added_in","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","setIsPastInitialLoad","useEffect","PickerContext","searchIndex","replace","forEach","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","suggestedUpdated","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","firstElementIndex","lastElementIndex","slice","getElementInRow","indexInRow","rowElements","getElementInNextRow","allElements","currentRow","index","nextRowElements","nextRow","getNextRowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","elementDataSetKey","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","nextVisibleEmoji","next","firstVisibleEmoji","nextCategory","prev","prevCategory","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","SUGGESTED_LS_KEY","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","useMouseDownHandlers","mouseDownTimerRef","closeAllOpenToggles","updateSuggested","onClick","emojiFromEvent","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","concat","filter","i","original","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","bodyRef","addEventListener","passive","removeEventListener","Boolean","parentElement","_element$parentElemen","isEmojiElement","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","useFilter","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","toLowerCase","longestMatch","keyword","dict","longestMatchingKey","keys","findLongestMatch","filtered","hasMatch","filterEmojiObjectByKeyword","setSearchTerm","then","some","getNormalizedSearchTerm","str","trim","useIsEmojiHidden","emojisThatFailedToLoad","isEmojiFiltered","_filter$searchTerm","isEmojiFilteredBySearchTerm","useIsEmojiFiltered","failedToLoad","has","filteredOut","Button","type","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","_ref$showVariations","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","_ref4$lazyLoad","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedEmojisModeConfig","suggested","suggestedItem","EmojiList","emojiList","RenderCategory","isEmojiHidden","isEmojiDisallowed","useIsEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","focusVisibleEmojiOneRowUp","exitUp","countInRow","prevVisibleCategory","prevRowElements","getElementInPrevRow","visibleEmojiOneRowUp","focusVisibleEmojiOneRowDown","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","Direction","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","Body","onScroll","useOnScroll","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","FlexDirection","Flex","_ref$style","ROW","Space","flex","Absolute","Relative","SkinTonePickerDirection","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","fullWidth","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","categoryNameFromDom","$category","getAttribute","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","_BodyRef$current","useScrollCategoryIntoView","visibleCategories","Map","observer","IntersectionObserver","entry","id","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","autoFocus","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useKeyboardNavigation","useScrollTo","hasOpenToggles","disallowMouseMove","useDisallowMouseMove","onKeyDown","Escape","preventDefault","usePickerMainKeyboardEvents","focusSkinTonePicker","useFocusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","useGoDownFromSearchInput","ArrowRight","ArrowDown","Enter","firstEmoji","click","focusAndClickFirstVisibleEmoji","useSearchInputKeyboardEvents","onType","useOnType","ArrowLeft","focusNextSkinTone","focusPrevSkinTone","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","focusCategoryNavigation","useGoUpFromBody","useBodyKeyboardEvents","exitLeft","currentSkinTone","appendSearch","useAppendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preloadEmoji","preloadedEmojs","url","emojiUrl","Image","PickerMain","PickerRootElement","searchModeActive","usePickerSizeConfig","useOnFocus","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","EmojiPickerReact"],"sourceRoot":""}