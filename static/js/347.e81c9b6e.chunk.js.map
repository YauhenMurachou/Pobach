{"version":3,"file":"static/js/347.e81c9b6e.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/users/Users.module.css?d05c","components/users/UserItem.tsx","hooks/useSearch.ts","hooks/useDebounce.ts","components/users/Users.tsx","components/users/UsersClass.tsx","components/users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__vVwd3\",\"header\":\"Users_header__jbNIb\",\"number\":\"Users_number__8PoIq\",\"itemWrapper\":\"Users_itemWrapper__CLc6T\",\"item\":\"Users_item__16xLs\",\"avatarWrapper\":\"Users_avatarWrapper__OqGHX\",\"avatar\":\"Users_avatar__GPP5D\",\"infoWrapper\":\"Users_infoWrapper__WiPfo\",\"name\":\"Users_name__+hmKG\",\"status\":\"Users_status__3F4SL\",\"id\":\"Users_id__h6+nK\",\"message\":\"Users_message__uOsMV\",\"pagination\":\"Users_pagination__x2PrL\"};","import { FC, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport ThreePIcon from '@mui/icons-material/ThreeP';\nimport { Button } from '@mui/material';\nimport avatar from 'src/images/avatar.png';\nimport { UserType } from 'src/types';\n\nimport classes from './Users.module.css';\n\ntype Props = {\n  followingInProgress: number[];\n  unfollowUsers: (id: number) => void;\n  followUsers: (id: number) => void;\n  user: UserType;\n};\n\nconst UserItem: FC<Props> = memo(\n  ({ followingInProgress, unfollowUsers, followUsers, user }) => {\n    const { t } = useTranslation();\n    return (\n      <div className={classes.item}>\n        <div className={classes.avatarWrapper}>\n          <NavLink to={'/profile/' + user.id}>\n            <img\n              src={\n                user.photos && user.photos.small != null\n                  ? user.photos.small\n                  : avatar\n              }\n              className={classes.avatar}\n              alt=\"avatar\"\n            />\n          </NavLink>\n          <div className={classes.infoWrapper}>\n            <NavLink to={'/profile/' + user.id} className={classes.name}>\n              {user.name}\n            </NavLink>\n            {user.status && (\n              <div className={classes.status}>\n                <ThreePIcon />\n                <div>{user.status}</div>\n              </div>\n            )}\n            <span className={classes.id}> id: {user.id} </span>\n            <NavLink to={'#'} className={classes.message}>\n              {t('users.message')}\n            </NavLink>\n          </div>\n        </div>\n        <div>\n          {user.followed ? (\n            <Button\n              variant=\"contained\"\n              startIcon={<PersonRemoveIcon />}\n              disabled={followingInProgress.some(\n                (id: UserType['id']) => id === user.id\n              )}\n              onClick={() => {\n                unfollowUsers(user.id);\n              }}\n              color=\"info\"\n            >\n              {t('users.unfollow')}\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              startIcon={<PersonAddIcon />}\n              disabled={followingInProgress.some(\n                (id: UserType['id']) => id === user.id\n              )}\n              onClick={() => {\n                followUsers(user.id);\n              }}\n            >\n              {t('users.follow')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default UserItem;\n","import { useEffect, useState } from 'react';\nimport { useDebounce } from 'src/hooks/useDebounce';\n\nexport const useSearch = (\n  onChange: (currentPage: number, pageSize: number, name?: string) => void,\n  currentPage: number,\n  pageSize: number\n) => {\n  const [isSearch, setIsSearch] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n\n  const toggleSearch = () => setIsSearch((prevState) => !prevState);\n  const debouncedValue = useDebounce<string>(searchValue, 500);\n\n  useEffect(() => {\n    setIsSearch(false);\n    setSearchValue('');\n  }, []);\n\n  useEffect(() => {\n    if (onChange && (searchValue.trim().length >= 2 || !searchValue.length)) {\n      onChange(currentPage, pageSize, searchValue);\n    }\n  }, [debouncedValue]); // eslint-disable-line\n\n  return { toggleSearch, isSearch, setSearchValue, searchValue };\n};\n","import { useEffect, useState } from 'react';\n\nexport const useDebounce = <T>(value: T, delay?: number): T => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay ?? 400);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import { ChangeEvent, FC, memo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment, TextField } from '@mui/material';\nimport Pagination from '@mui/material/Pagination';\nimport UserItem from 'src/components/users/UserItem';\nimport { useSearch } from 'src/hooks/useSearch';\nimport { RootState } from 'src/redux/redux-store';\nimport { UserType } from 'src/types';\n\nimport classes from './Users.module.css';\n\ntype Props = {\n  totalUsersCount: number;\n  pageSize: number;\n  currentPage: number;\n  users: UserType[];\n  followingInProgress: number[];\n  onPageChange: (value: number) => void;\n  unfollowUsers: (id: number) => void;\n  followUsers: (id: number) => void;\n  getUsers: (currentPage: number, pageSize: number, name?: string) => void;\n};\n\nconst Users: FC<Props> = memo(\n  ({\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    users,\n    followingInProgress,\n    onPageChange,\n    unfollowUsers,\n    followUsers,\n    getUsers,\n  }) => {\n    const { setSearchValue, searchValue } = useSearch(\n      getUsers,\n      currentPage,\n      pageSize\n    );\n\n    const isSearch = searchValue.length ? true : false;\n\n    const [page, setPage] = useState(1);\n    const { isAuth } = useSelector((state: RootState) => state.auth);\n    const isFetching = useSelector(\n      (state: RootState) => state.users.isFetching\n    );\n    const { t } = useTranslation();\n    const handleChange = (_event: ChangeEvent<unknown>, page: number) => {\n      setPage(page);\n      onPageChange(page);\n    };\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\n    const pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    const handleChangeSearch = (\n      event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      setSearchValue(event.target.value);\n    };\n\n    if (!isAuth) {\n      return <Redirect to=\"/Login\" />;\n    }\n\n    return (\n      <div className={classes.wrapper}>\n        {!isFetching && (\n          <>\n            <div className={classes.header}>\n              {t('users.showing')}{' '}\n              <span className={classes.number}>{users.length}</span>{' '}\n              {t('users.users')}{' '}\n              <span className={classes.number}>{totalUsersCount}</span>\n              {t('users.registered')}\n            </div>\n            <TextField\n              onChange={handleChangeSearch}\n              value={searchValue}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              //@ts-ignore\n              placeholder={t('users.search')}\n              fullWidth\n              type=\"search\"\n              size=\"small\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{ bgcolor: 'white' }}\n              autoFocus={isSearch}\n            />\n            <div className={classes.itemWrapper}>\n              {users.map((user: UserType, index) => (\n                <UserItem\n                  user={user}\n                  followUsers={followUsers}\n                  unfollowUsers={unfollowUsers}\n                  followingInProgress={followingInProgress}\n                  key={index + user.toString()}\n                />\n              ))}\n            </div>\n            <div className={classes.pagination}>\n              {!!users.length && (\n                <Pagination\n                  count={pagesCount}\n                  showFirstButton\n                  showLastButton\n                  page={page}\n                  onChange={handleChange}\n                  shape=\"rounded\"\n                />\n              )}\n            </div>\n            {isSearch && !users.length && <div>{t('users.nothing')}</div>}\n          </>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default Users;\n","import React from 'react';\nimport Loader from 'src/components/loader/Loader';\nimport Users from 'src/components/users/Users';\n\nimport { UserType } from '../../types';\n\ntype PropsType = {\n  currentPage: number;\n  pageSize: number;\n  getUsers: (currentPage: number, pageSize: number) => void;\n  pageNumber?: number;\n  isFetching: boolean;\n  users: UserType[];\n  totalUsersCount: number;\n  unfollowUsers: (id: number) => void;\n  followUsers: (id: number) => void;\n  followingInProgress: number[];\n  // setFollowingInProgress: any;\n};\n\nclass UsersClass extends React.Component<PropsType> {\n  componentDidMount() {\n    // componentDidMount() вызывается сразу после монтирования (то есть, вставки компонента в DOM).\n    // В этом методе должны происходить действия, которые требуют наличия DOM-узлов.\n    //  Это хорошее место для создания сетевых запросов.\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChange = (pageNumber: number) => {\n    this.props.getUsers(pageNumber, this.props.pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching && <Loader isFetching={this.props.isFetching} />}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChange={this.onPageChange}\n          unfollowUsers={this.props.unfollowUsers}\n          followUsers={this.props.followUsers}\n          users={this.props.users}\n          followingInProgress={this.props.followingInProgress}\n          getUsers={this.props.getUsers}\n          // setFollowingInProgress={this.props.setFollowingInProgress}\n        />\n      </>\n    );\n  }\n}\n\nexport default UsersClass;\n","import { connect } from 'react-redux';\r\nimport UsersClass from 'src/components/users/UsersClass';\r\nimport { RootState } from 'src/redux/redux-store';\r\nimport {\r\n  actions,\r\n  followUsersThunkCreator,\r\n  getUsersThunkCreator,\r\n  unfollowUsersThunkCreator,\r\n} from 'src/redux/usersReducer';\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  users: state.users.users,\r\n  pageSize: state.users.pageSize,\r\n  totalUsersCount: state.users.totalUsersCount,\r\n  currentPage: state.users.currentPage,\r\n  isFetching: state.users.isFetching,\r\n  followingInProgress: state.users.followingInProgressUsers,\r\n});\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n  setTotalUsersCount: actions.setTotalUsersCountActionCreator,\r\n  setFollowingInProgress: actions.setFollowingInProgressActionCreator,\r\n  getUsers: getUsersThunkCreator,\r\n  followUsers: followUsersThunkCreator,\r\n  unfollowUsers: unfollowUsersThunkCreator,\r\n})(UsersClass);\r\n\r\nexport default UsersContainer;\r\n"],"names":["memo","followingInProgress","unfollowUsers","followUsers","user","t","useTranslation","className","classes","to","id","src","photos","small","avatar","alt","name","status","ThreeP","followed","Button","variant","startIcon","PersonRemove","disabled","some","onClick","color","PersonAdd","useSearch","onChange","currentPage","pageSize","useState","isSearch","setIsSearch","searchValue","setSearchValue","debouncedValue","value","delay","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","trim","length","toggleSearch","prevState","totalUsersCount","users","onPageChange","getUsers","page","setPage","isAuth","useSelector","state","auth","isFetching","pagesCount","Math","ceil","pages","i","push","TextField","event","target","placeholder","fullWidth","type","size","InputProps","startAdornment","InputAdornment","position","Search","sx","bgcolor","autoFocus","map","index","toString","Pagination","count","showFirstButton","showLastButton","_event","shape","UsersClass","pageNumber","props","this","Loader","React","connect","followingInProgressUsers","setTotalUsersCount","actions","setFollowingInProgress","getUsersThunkCreator","followUsersThunkCreator","unfollowUsersThunkCreator"],"sourceRoot":""}