{"version":3,"file":"static/js/802.db47810e.chunk.js","mappings":"sJA+CA,UAzCqB,WACnB,IAAQA,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,IAA5B,IAAvBH,OACR,GAAyBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAME,QAA5B,IAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,GAAWC,EAAAA,EAAAA,MAKjB,OAAKR,GAIH,iCACE,+EACA,4BACE,mBAAQS,QAXM,kBAAMF,EAASG,EAAAA,EAAAA,kBAAf,EAWgBC,KAAK,SAAnC,uBAEU,QAEZ,0BACE,mBAAQF,QAfM,kBAAMF,EAASG,EAAAA,EAAAA,kBAAf,EAegBC,KAAK,SAAnC,0BAIF,0BACE,mBAAQA,KAAK,SAASF,QAnBH,kBAAMF,EAASG,EAAAA,EAAAA,uBAAf,EAmBnB,yCAIF,0BACE,mBAAQC,KAAK,SAASF,QAvBT,kBAAMF,EAASG,EAAAA,EAAAA,uBAAf,EAuBb,2BAIF,mBACA,uCAAeL,EAAf,YACCC,IAAS,mCAAWA,EAAMM,aA3BtB,SAAC,KAAD,CAAUC,GAAG,UA8BvB,C","sources":["components/settings/Settings.tsx"],"sourcesContent":["import { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { RootState } from 'src/redux/redux-store';\r\nimport { actions } from 'src/redux/settingsReducer';\r\n\r\nconst Settings: FC = () => {\r\n  const { isAuth } = useSelector((state: RootState) => state.auth);\r\n  const { count, todos } = useSelector((state: RootState) => state.settings);\r\n  const dispatch = useDispatch();\r\n  const onIncrement = () => dispatch(actions.incrementAction());\r\n  const onDecrement = () => dispatch(actions.decrementAction());\r\n  const onIncrementAsync = () => dispatch(actions.incrementAsyncAction());\r\n  const onGetTodos = () => dispatch(actions.todosRequestedAction());\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <h4>This is just test page for practice in Redux-saga</h4>\r\n      <div>\r\n        <button onClick={onIncrement} type=\"button\">\r\n          Increment\r\n        </button>{' '}\r\n      </div>\r\n      <div>\r\n        <button onClick={onDecrement} type=\"button\">\r\n          Decrement\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={onIncrementAsync}>\r\n          Increment after 1 second\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={onGetTodos}>\r\n          onGetTodos\r\n        </button>\r\n      </div>\r\n      <hr />\r\n      <div>Clicked: {count} times</div>\r\n      {todos && <div>Todo:{todos.title}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"names":["isAuth","useSelector","state","auth","settings","count","todos","dispatch","useDispatch","onClick","actions","type","title","to"],"sourceRoot":""}