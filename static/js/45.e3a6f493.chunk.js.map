{"version":3,"file":"static/js/45.e3a6f493.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","webpack://my-app/./src/components/login/Login.module.css?3966","components/login/LoginForm.tsx","components/login/Login.tsx","utils/validationForms.ts","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__aFJTh\",\"login\":\"Login_login__hfHuW\",\"loginForm\":\"Login_loginForm__cMtN3\",\"title\":\"Login_title__38s5G\",\"field\":\"Login_field__SpLKj\",\"buttons\":\"Login_buttons__0Xfrp\",\"error\":\"Login_error__FQZiN\"};","import { FC, MouseEvent, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Button, IconButton, InputAdornment } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-mui';\nimport { LoginType } from 'src/components/login/Login';\nimport { RootState } from 'src/redux/redux-store';\nimport { loginValidationSchema } from 'src/utils/validationForms';\n\nimport styles from './Login.module.css';\n\ntype Props = {\n  onSubmit: (values: LoginType) => void;\n};\n\nconst LoginForm: FC<Props> = ({ onSubmit }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n  const { error, captchaImageUrl } = useSelector(\n    (state: RootState) => state.auth\n  );\n  const { t } = useTranslation();\n  const [value, setValue] = useState('');\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values) => {\n          onSubmit({ ...values, captcha: value });\n          setValue('');\n        }}\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n          captcha: '',\n        }}\n        validationSchema={loginValidationSchema}\n      >\n        {({ errors, dirty }) => (\n          <Form>\n            <div className={styles.field}>\n              <Field\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                component={TextField}\n                disabled={false}\n              />\n            </div>\n            <div className={styles.field}>\n              <Field\n                fullWidth\n                placeholder=\"Password\"\n                name=\"password\"\n                id=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                component={TextField}\n                disabled={false}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </div>\n            {captchaImageUrl && (\n              <>\n                <img\n                  src={captchaImageUrl}\n                  alt=\"captcha\"\n                  width=\"180px\"\n                  height=\"90px\"\n                />\n                <Field\n                  fullWidth\n                  placeholder=\"captcha\"\n                  name=\"captcha\"\n                  id=\"captcha\"\n                  type=\"text\"\n                  label=\"captcha\"\n                  component={TextField}\n                  disabled={!captchaImageUrl}\n                  value={value}\n                  onChange={(e: {\n                    target: { value: React.SetStateAction<string> };\n                  }) => setValue(e.target.value)}\n                />\n              </>\n            )}\n\n            {errors && <div className={styles.error}>{error}</div>}\n            <div className={styles.field}>\n              <Field\n                type=\"checkbox\"\n                component={CheckboxWithLabel}\n                name=\"rememberMe\"\n                Label={{ label: 'remember me' }}\n              />\n            </div>\n            <div className={styles.buttons}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={\n                  !!errors.email ||\n                  !!errors.password ||\n                  !dirty ||\n                  (!!captchaImageUrl && !value.trim())\n                }\n              >\n                {t('login.enter')}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                href=\"https://social-network.samuraijs.com/signUp\"\n              >\n                {t('login.registration')}\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginForm from 'src/components/login/LoginForm';\r\nimport { loginDataThunkCreator } from 'src/redux/authReducer';\r\nimport { RootState } from 'src/redux/redux-store';\r\n\r\nimport styles from './Login.module.css';\r\n\r\nexport type LoginType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n  captcha: string | null;\r\n};\r\n\r\nconst Login: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuth, userId } = useSelector((state: RootState) => state.auth);\r\n  const profilePath = `/Profile/${userId}`;\r\n\r\n  const logInFunction = (values: LoginType) => {\r\n    const { email, password, rememberMe, captcha } = values;\r\n    dispatch(loginDataThunkCreator(email, password, rememberMe, captcha));\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={profilePath} />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.login}>\r\n        <div className={styles.loginForm}>\r\n          <h1 className={styles.title}>Вход в аккаунт</h1>\r\n          <LoginForm onSubmit={logInFunction} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import i18n from 'src/i18n';\r\nimport * as Yup from 'yup';\r\n\r\nconst isDomain = /(^(\\w[a-z\\d-]*\\.)+[a-z]{2,}$)/i;\r\nconst { t } = i18n;\r\n\r\nconst validateContact = Yup.string()\r\n  .trim()\r\n  .nullable()\r\n  .matches(isDomain, t('validation.domain') as string);\r\nconst longStringValidate = Yup.string()\r\n  .trim()\r\n  .max(25, t('validation.long') as string)\r\n  .required(t('validation.required') as string);\r\n\r\nexport const profielValidationSchema = Yup.object().shape({\r\n  fullName: Yup.string()\r\n    .trim()\r\n    .max(15, t('validation.long') as string)\r\n    .required(t('validation.required') as string),\r\n  aboutMe: longStringValidate,\r\n  lookingForAJob: Yup.boolean(),\r\n  lookingForAJobDescription: longStringValidate,\r\n  contacts: Yup.object().shape({\r\n    facebook: validateContact,\r\n    github: validateContact,\r\n    vk: validateContact,\r\n    instagram: validateContact,\r\n    twitter: validateContact,\r\n    website: validateContact,\r\n    youtube: validateContact,\r\n    mainLink: validateContact,\r\n  }),\r\n});\r\n\r\nexport const loginValidationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .max(25, t('validation.long') as string)\r\n    .required(t('validation.required') as string)\r\n    .email(t('validation.email') as string),\r\n  password: Yup.string()\r\n    .max(15, t('validation.long') as string)\r\n    .required(t('validation.required') as string),\r\n});\r\n\r\nexport const isProfileFormChanged = <T extends { [key: string]: any }>(\r\n  values: T,\r\n  initialValues: T\r\n): boolean =>\r\n  Object.entries(values).some(([key, field]) => {\r\n    const initial = initialValues[key];\r\n\r\n    if (typeof field === 'string') {\r\n      return (\r\n        field.trim() !== (typeof initial === 'string' ? initial.trim() : '')\r\n      );\r\n    }\r\n\r\n    if (typeof field === 'boolean') {\r\n      return field !== (typeof initial === 'boolean' ? initial : false);\r\n    }\r\n\r\n    if (typeof field === 'object') {\r\n      return field && isProfileFormChanged(field, initial || {});\r\n    }\r\n\r\n    return false;\r\n  });\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["createSvgIcon","_jsx","d","onSubmit","useState","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","useSelector","state","auth","error","captchaImageUrl","t","useTranslation","value","setValue","values","captcha","initialValues","email","password","rememberMe","validationSchema","loginValidationSchema","errors","dirty","className","styles","fullWidth","id","name","label","placeholder","component","TextField","disabled","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","src","alt","width","height","onChange","e","target","CheckboxWithLabel","Label","Button","variant","color","trim","href","dispatch","useDispatch","isAuth","userId","profilePath","to","loginDataThunkCreator","i18n","validateContact","Yup","nullable","matches","longStringValidate","max","required","profielValidationSchema","shape","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","isProfileFormChanged","Object","entries","some","key","field","initial","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","ownerState","root","capitalize","disablePointerEvents","theme","_extends","display","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}