{"version":3,"file":"static/js/550.964e3358.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/chat/messages/Messages.module.css?6f0c","components/chat/messages/Messages.tsx","webpack://my-app/./src/components/common/molecules/addMessageForm/AddMessageForm.module.css?1a60","components/common/molecules/addMessageForm/AddMessageForm.tsx","components/chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messagesWrapper\":\"Messages_messagesWrapper__GmzfQ\",\"avatar\":\"Messages_avatar__CDvwB\",\"messageContainer\":\"Messages_messageContainer__Lz+14\",\"deleted\":\"Messages_deleted__R0Sbd\",\"messageBlock\":\"Messages_messageBlock__pGIH5\",\"author\":\"Messages_author__vTxJx\",\"message\":\"Messages_message__BBOz6\",\"iconWrapper\":\"Messages_iconWrapper__UJ90K\",\"icon\":\"Messages_icon__oOTpf\",\"recovery\":\"Messages_recovery__i8PDO\"};","import { FC, memo, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { Tooltip } from '@mui/material';\nimport classNames from 'classnames';\nimport { MessageType } from 'src/api/chat-api';\nimport avatar from 'src/images/avatar.png';\nimport { chatActions } from 'src/redux/chatReducer';\nimport { RootState } from 'src/redux/redux-store';\n\nimport classes from './Messages.module.css';\n\nconst Message: FC<MessageType> = memo(\n  ({ message, userName, photo, userId, id, deleted, deletedMessage }) => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const handleDeleteMessage = () => {\n      dispatch(chatActions.deleteMessageActionCreator(id as string));\n    };\n\n    const handleRestoreMessage = () => {\n      dispatch(chatActions.restoreMessageActionCreator(id as string));\n    };\n\n    const [deletion, recovery] =\n      deleted && deletedMessage ? deletedMessage.split('.') : [];\n\n    return (\n      <div\n        className={classNames(classes.messageContainer, {\n          [classes.deleted]: deleted,\n        })}\n      >\n        <div className={classes.messageBlock}>\n          {!deleted && (\n            <NavLink to={'/profile/' + userId}>\n              <img\n                src={photo ?? avatar}\n                alt={userName}\n                className={classes.avatar}\n              />\n            </NavLink>\n          )}\n          <div>\n            {!deleted && (\n              <NavLink to={'/profile/' + userId}>\n                <div className={classes.author}>{userName}</div>\n              </NavLink>\n            )}\n            {!deleted && <div className={classes.message}>{message}</div>}\n            {deleted && (\n              <div className={classes.message}>\n                <span>{deletion}</span>.{' '}\n                <span\n                  className={classes.recovery}\n                  onClick={handleRestoreMessage}\n                  role=\"button\"\n                >\n                  {recovery}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        {!deleted && (\n          <div className={classes.iconWrapper}>\n            <Tooltip\n              title={t('chat.delete') as string}\n              arrow\n              placement=\"bottom-start\"\n            >\n              <DeleteOutlineIcon\n                onClick={handleDeleteMessage}\n                className={classes.icon}\n              />\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport const Messages: FC = memo(() => {\n  const messages = useSelector((state: RootState) => state.chat.messages);\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return (\n    <div className={classes.messagesWrapper}>\n      {messages.map(\n        ({ id, userId, message, photo, userName, deleted, deletedMessage }) => (\n          <Message\n            key={id}\n            userId={userId}\n            message={message}\n            photo={photo}\n            userName={userName}\n            id={id}\n            deleted={deleted}\n            deletedMessage={deletedMessage}\n          />\n        )\n      )}\n      <div ref={scrollRef}></div>\n    </div>\n  );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"addMessageForm\":\"AddMessageForm_addMessageForm__Ex7F4\",\"emojiContainer\":\"AddMessageForm_emojiContainer__GgOEq\"};","import { FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport TagFacesIcon from '@mui/icons-material/TagFaces';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n} from '@mui/material';\r\nimport EmojiPicker, { EmojiClickData } from 'emoji-picker-react';\r\nimport { sendMessageThunkCreator } from 'src/redux/chatReducer';\r\nimport { RootState } from 'src/redux/redux-store';\r\n\r\nimport classes from './AddMessageForm.module.css';\r\n\r\nexport const AddMessageForm: FC = () => {\r\n  const [message, setMessage] = useState('');\r\n  const status = useSelector((state: RootState) => state.chat.status);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const sendMessage = () => {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    dispatch(sendMessageThunkCreator(message));\r\n    setMessage('');\r\n  };\r\n\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n\r\n  const handleShowEmoji = () => {\r\n    setShowEmoji((prevState) => !prevState);\r\n  };\r\n\r\n  const handleEmojiClick = (emojiData: EmojiClickData) => {\r\n    setMessage(message + emojiData.emoji);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.addMessageForm}>\r\n      <OutlinedInput\r\n        placeholder={t('chat.enter') as string}\r\n        multiline\r\n        maxRows={4}\r\n        value={message}\r\n        onChange={(e) => setMessage(e.currentTarget.value)}\r\n        fullWidth\r\n        onKeyDown={(e) => {\r\n          if (e.ctrlKey && e.key === 'Enter') {\r\n            setMessage(`${message}\\r\\n`);\r\n          } else if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            sendMessage();\r\n          }\r\n        }}\r\n        autoFocus\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowEmoji} edge=\"end\">\r\n              <TagFacesIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      {showEmoji && (\r\n        <div className={classes.emojiContainer}>\r\n          <EmojiPicker\r\n            onEmojiClick={handleEmojiClick}\r\n            autoFocusSearch={false}\r\n          />\r\n        </div>\r\n      )}\r\n      <Button\r\n        onClick={sendMessage}\r\n        disabled={status !== 'ready' || !message.trim().length}\r\n        variant=\"contained\"\r\n        endIcon={<SendIcon />}\r\n      >\r\n        {t('chat.send')}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Messages } from 'src/components/chat/messages/Messages';\nimport { AddMessageForm } from 'src/components/common/molecules/addMessageForm/AddMessageForm';\nimport Loader from 'src/components/loader/Loader';\nimport { RootState } from 'src/redux/redux-store';\n\n// import classes from './ChatPage.module.css';\n\nexport const ChatPage: FC = memo(() => {\n  const { isAuth } = useSelector((state: RootState) => state.auth);\n  const status = useSelector((state: RootState) => state.chat.status);\n\n  if (!isAuth) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  return (\n    <>\n      {status === 'pending' && <Loader isFetching={status === 'pending'} />}\n      {status === 'ready' && (\n        <>\n          <Messages />\n          <AddMessageForm />\n        </>\n      )}\n    </>\n  );\n});\n"],"names":["Message","memo","message","userName","photo","userId","id","deleted","deletedMessage","dispatch","useDispatch","t","useTranslation","split","deletion","recovery","className","classNames","classes","to","src","avatar","alt","onClick","chatActions","role","Tooltip","title","arrow","placement","DeleteOutline","Messages","messages","useSelector","state","chat","scrollRef","useRef","useEffect","current","scrollIntoView","map","ref","AddMessageForm","useState","setMessage","status","sendMessage","sendMessageThunkCreator","showEmoji","setShowEmoji","OutlinedInput","placeholder","multiline","maxRows","value","onChange","e","currentTarget","fullWidth","onKeyDown","ctrlKey","key","shiftKey","preventDefault","autoFocus","endAdornment","InputAdornment","position","IconButton","prevState","edge","TagFaces","onEmojiClick","emojiData","emoji","autoFocusSearch","Button","disabled","trim","length","variant","endIcon","Send","ChatPage","isAuth","auth","Loader","isFetching"],"sourceRoot":""}