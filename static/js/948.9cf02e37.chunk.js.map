{"version":3,"file":"static/js/948.9cf02e37.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common/atoms/searchField/SearchField.module.css?aeca","components/common/atoms/searchField/SearchField.tsx","components/dialogs/dialogsHeader/RightIcons.tsx","webpack://my-app/./src/components/dialogs/dialogsHeader/DialogsHeader.module.css?6d56","components/dialogs/dialogsHeader/DialogsHeader.tsx","webpack://my-app/./src/components/dialogs/dialogTitle/DialogTitle.module.css?8ea6","components/dialogs/dialogTitle/DialogTitle.tsx","webpack://my-app/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchField_wrapper__-qG+l\"};","import {\n  ChangeEvent,\n  Dispatch,\n  FC,\n  memo,\n  ReactNode,\n  SetStateAction,\n} from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment, TextField } from '@mui/material';\n\nimport classes from './SearchField.module.css';\n\ntype Props = {\n  placeholder: string;\n  searchValue: string;\n  setSearchValue: Dispatch<SetStateAction<string>>;\n  isSearch: boolean;\n  isDisabled?: boolean;\n  rightIcons?: ReactNode;\n};\n\nconst SearchField: FC<Props> = memo(\n  ({\n    placeholder,\n    searchValue,\n    setSearchValue,\n    isSearch,\n    isDisabled,\n    rightIcons,\n  }) => {\n    const handleChangeSearch = (\n      e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      setSearchValue(e.target.value);\n    };\n\n    return (\n      <div className={classes.wrapper}>\n        <TextField\n          onChange={handleChangeSearch}\n          value={searchValue}\n          placeholder={placeholder}\n          disabled={isDisabled}\n          fullWidth\n          type=\"search\"\n          size=\"small\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: !isSearch && rightIcons,\n          }}\n          sx={{ bgcolor: 'var(--white-main)' }}\n          autoFocus={isSearch}\n        />\n      </div>\n    );\n  }\n);\n\nexport default SearchField;\n","import { FC } from 'react';\nimport CreateIcon from '@mui/icons-material/Create';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\nimport { IconButton, InputAdornment } from '@mui/material';\n\nconst RightIcons: FC = () => (\n  <InputAdornment position=\"start\">\n    <IconButton>\n      <PhoneForwardedIcon />\n    </IconButton>\n    <IconButton>\n      <CreateIcon />\n    </IconButton>\n    <IconButton>\n      <MoreHorizIcon />\n    </IconButton>\n  </InputAdornment>\n);\n\nexport default RightIcons;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DialogsHeader_wrapper__erir0\"};","import { FC, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SearchField from 'src/components/common/atoms/searchField/SearchField';\nimport RightIcons from 'src/components/dialogs/dialogsHeader/RightIcons';\n\nimport classes from './DialogsHeader.module.css';\n\nconst DialogsHeader: FC = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const { t } = useTranslation();\n\n  return (\n    <div className={classes.wrapper}>\n      <SearchField\n        isSearch={false}\n        placeholder={t('dialogs.search')}\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n        rightIcons={<RightIcons />}\n        isDisabled\n      />\n    </div>\n  );\n};\nexport default DialogsHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DialogTitle_wrapper__O+8v6\",\"icon\":\"DialogTitle_icon__pG9wI\",\"container\":\"DialogTitle_container__B8YuV\",\"userName\":\"DialogTitle_userName__blves\",\"iconWrapper\":\"DialogTitle_iconWrapper__RLNT6\",\"top\":\"DialogTitle_top__FClld\",\"date\":\"DialogTitle_date__WpZm5\"};","import { FC, MouseEvent } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport {\n  Avatar,\n  Badge,\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { Dialog } from 'src/types';\nimport { convertDate } from 'src/utils/date';\n\nimport classes from './DialogTitle.module.css';\n\ntype Props = {\n  dialog: Dialog;\n  openDialog: () => void;\n  title: string;\n  isLast: boolean;\n};\n\nconst DialogTitle: FC<Props> = ({ dialog, openDialog, title, isLast }) => {\n  const {\n    id,\n    userName,\n    lastDialogActivityDate,\n    hasNewMessages,\n    newMessagesCount,\n    photos,\n  } = dialog;\n\n  const openMenu = (e: MouseEvent<SVGSVGElement>) => {\n    e.preventDefault();\n    console.log('openMenu');\n  };\n\n  const dialogPath = `/Dialogs/${id}`;\n\n  return (\n    <div className={classes.wrapper}>\n      <NavLink\n        className={classes.container}\n        onClick={openDialog}\n        to={dialogPath}\n      >\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt={userName} src={photos?.small} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={userName}\n            secondary={title}\n            className={classes.userName}\n          />\n          <ListItemIcon className={classes.iconWrapper}>\n            <div className={classes.top}>\n              <span className={classes.date}>\n                {convertDate(lastDialogActivityDate)}\n              </span>\n              <MoreHorizIcon onClick={openMenu} className={classes.icon} />\n            </div>\n            {hasNewMessages && (\n              <div>\n                <Badge badgeContent={newMessagesCount} color=\"primary\" />\n              </div>\n            )}\n          </ListItemIcon>\n        </ListItem>\n      </NavLink>\n      {!isLast && <Divider variant=\"fullWidth\" component=\"li\" />}\n    </div>\n  );\n};\n\nexport default DialogTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__khqyU\"};","import { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DialogsHeader from 'src/components/dialogs/dialogsHeader/DialogsHeader';\r\nimport DialogTitle from 'src/components/dialogs/dialogTitle/DialogTitle';\r\nimport {\r\n  dialogOpenedAction,\r\n  getDialogsAction,\r\n  getTitlesAction,\r\n  messagesListCleared,\r\n} from 'src/redux/dialogsReducer';\r\nimport { RootState } from 'src/redux/redux-store';\r\n\r\nimport classes from './Dialogs.module.css';\r\n\r\nconst Dialogs: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuth, dialogs, messagesTitles } = useSelector(\r\n    (state: RootState) => ({\r\n      isAuth: state.auth,\r\n      dialogs: state.dialogs.dialogs,\r\n      messagesTitles: state.dialogs.messagesTitles,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getDialogsAction());\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(\r\n    () => () => {\r\n      dispatch(messagesListCleared());\r\n    },\r\n    [] // eslint-disable-line\r\n  );\r\n\r\n  useEffect(() => {\r\n    const dialogsIds = dialogs.map((dialog) => dialog.id);\r\n    if (dialogsIds.length !== messagesTitles.length) {\r\n      dialogsIds.map((id) => dispatch(getTitlesAction({ id })));\r\n    }\r\n  }, [dialogs]); // eslint-disable-line\r\n\r\n  const titlesObject = Object.fromEntries(messagesTitles);\r\n\r\n  const openDialog = (id: number) => dispatch(dialogOpenedAction({ id }));\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n\r\n  return (\r\n    <ul className={classes.dialogs}>\r\n      <DialogsHeader />\r\n      {dialogs.map((dialog, index) => (\r\n        <DialogTitle\r\n          key={dialog.id}\r\n          dialog={dialog}\r\n          title={titlesObject[dialog.id]}\r\n          openDialog={() => openDialog(dialog.id)}\r\n          isLast={index === dialogs.length - 1}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n"],"names":["memo","placeholder","searchValue","setSearchValue","isSearch","isDisabled","rightIcons","className","classes","TextField","onChange","e","target","value","disabled","fullWidth","type","size","InputProps","startAdornment","InputAdornment","position","Search","endAdornment","sx","bgcolor","autoFocus","IconButton","PhoneForwarded","Create","MoreHoriz","useState","t","useTranslation","SearchField","dialog","openDialog","title","isLast","id","userName","lastDialogActivityDate","hasNewMessages","newMessagesCount","photos","dialogPath","onClick","to","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","small","ListItemText","primary","secondary","ListItemIcon","convertDate","preventDefault","console","log","Badge","badgeContent","color","Divider","variant","component","dispatch","useDispatch","useSelector","state","isAuth","auth","dialogs","messagesTitles","useEffect","getDialogsAction","messagesListCleared","dialogsIds","map","length","getTitlesAction","titlesObject","Object","fromEntries","index","dialogOpenedAction"],"sourceRoot":""}